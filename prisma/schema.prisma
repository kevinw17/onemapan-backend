// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  user_info_id         Int             @id @default(autoincrement())
  qiu_dao_id           Int             @unique
  qiudao               QiuDao          @relation(fields: [qiu_dao_id], references: [qiu_dao_id])
  full_name            String          @db.VarChar(250)
  mandarin_name        String?         @db.VarChar(4)
  is_qing_kou          Boolean
  gender               Gender
  blood_type           BloodType?
  place_of_birth       String          @db.VarChar(250)
  date_of_birth        DateTime        @db.Date
  date_of_death        DateTime?       @db.Date
  id_card_number       String?         @db.VarChar(20)
  phone_number         String          @db.Char(30)
  email                String?
  marital_status       MaritalStatus?
  last_education_level String?         @db.VarChar(100)
  education_major      String?         @db.VarChar(100)
  job_name             String?         @db.VarChar(100)
  biodata              Bytes?
  spiritualUser        SpiritualUser?
  domicile_location_id Int
  id_card_location_id  Int
  domicile_location    Location        @relation("domicile", fields: [domicile_location_id], references: [location_id])
  id_card_location     Location        @relation("id_card_location", fields: [id_card_location_id], references: [location_id])
  created_at           DateTime?       @default(now())
  updated_at           DateTime?       @updatedAt
  userCredential       UserCredential?
}

model QiuDao {
  qiu_dao_id               Int           @id @default(autoincrement())
  User                     User?
  qiu_dao_name             String?       @db.VarChar(250)
  qiu_dao_mandarin_name    String?       @db.VarChar(250)
  qiu_dao_location_id      Int
  qiu_dao_location         Fotang        @relation(fields: [qiu_dao_location_id], references: [fotang_id])
  dian_chuan_shi_id        Int?
  dian_chuan_shi           DianChuanShi? @relation("DianChuanShiRelation", fields: [dian_chuan_shi_id], references: [id])
  yin_shi_qd_id            Int?
  yin_shi_qd_name          String?       @db.VarChar(250)
  yin_shi_qd_mandarin_name String?       @db.VarChar(4)
  yin_shi_reference        QiuDao?       @relation("YinShiReference", fields: [yin_shi_qd_id], references: [qiu_dao_id])
  yin_shi_dependents       QiuDao[]      @relation("YinShiReference")
  bao_shi_qd_id            Int?
  bao_shi_qd_name          String?       @db.VarChar(250)
  bao_shi_qd_mandarin_name String?       @db.VarChar(4)
  bao_shi_reference        QiuDao?       @relation("BaoShiReference", fields: [bao_shi_qd_id], references: [qiu_dao_id])
  bao_shi_dependents       QiuDao[]      @relation("BaoShiReference")
  lunar_sui_ci_year        String        @db.VarChar(3)
  lunar_month              String        @db.VarChar(4)
  lunar_day                String        @db.VarChar(4)
  lunar_shi_chen_time      String        @db.VarChar(2)
  qiu_dao_card_s3_url      String?       @db.VarChar(250)
  created_at               DateTime?     @default(now())
  updated_at               DateTime?     @updatedAt
}

model Location {
  location_id            Int       @id @default(autoincrement())
  location_name          String    @db.VarChar(250)
  location_mandarin_name String?   @db.VarChar(20)
  latitude               Int?
  longitude              Int?
  country_iso            String    @default("IDN") @db.Char(3)
  locality               Locality  @relation(fields: [localityId], references: [id])
  localityId             Int
  street                 String?   @db.VarChar(250)
  postal_code            String?   @db.VarChar(10)
  users_domicile         User[]    @relation("domicile")
  users_id_card_location User[]    @relation("id_card_location")
  created_at             DateTime? @default(now())
  updated_at             DateTime? @updatedAt
  Event                  Event[]
}

model UserCredential {
  user_credential Int       @id @default(autoincrement())
  user_id         Int?      @unique
  user            User?     @relation(fields: [user_id], references: [user_info_id])
  username        String    @unique @db.VarChar(500)
  hashed_password String?   @db.VarChar(500)
  last_logged_in  DateTime  @default(now())
  created_at      DateTime? @default(now())
  updated_at      DateTime? @updatedAt
}

model Fotang {
  fotang_id              Int       @id @default(autoincrement())
  location_name          String    @db.VarChar(250)
  location_mandarin_name String?   @db.VarChar(20)
  latitude               Int?
  longitude              Int?
  area                   Korwil
  country_iso            String    @default("IDN") @db.Char(3)
  locality               Locality  @relation(fields: [localityId], references: [id])
  localityId             Int
  street                 String?   @db.VarChar(250)
  postal_code            String?   @db.VarChar(10)
  QiuDao                 QiuDao[]
  created_at             DateTime? @default(now())
  updated_at             DateTime? @updatedAt
}

model DianChuanShi {
  id            Int      @id
  name          String?  @db.VarChar(250)
  mandarin_name String?  @db.VarChar(4)
  area          Korwil
  is_fuwuyuan   Boolean?
  qiuDaos       QiuDao[] @relation("DianChuanShiRelation")
}

model SpiritualUser {
  id               Int             @id @default(autoincrement())
  user             User            @relation(fields: [userId], references: [user_info_id])
  userId           Int             @unique
  spiritual_status SpiritualStatus
  role_start       DateTime?
  role_end         DateTime?
  is_fuwuyuan      Boolean?
  created_at       DateTime        @default(now())
  updated_at       DateTime        @updatedAt
}

enum SpiritualStatus {
  QianRen
  DianChuanShi
  TanZhu
  FoYuan
  BanShiYuan
  QianXian
  DaoQin
}

model Province {
  id     Int    @id @default(autoincrement())
  name   String @unique
  cities City[]
}

model City {
  id         Int        @id @default(autoincrement())
  name       String
  province   Province   @relation(fields: [provinceId], references: [id])
  provinceId Int
  districts  District[]

  @@unique([name, provinceId])
}

model District {
  id         Int        @id @default(autoincrement())
  name       String
  city       City       @relation(fields: [cityId], references: [id])
  cityId     Int
  localities Locality[]

  @@unique([name, cityId])
}

model Locality {
  id         Int        @id @default(autoincrement())
  name       String
  district   District   @relation(fields: [districtId], references: [id])
  districtId Int
  locations  Location[]
  fotangs    Fotang[]

  @@unique([name, districtId])
}

model Event {
  event_id              Int          @id @default(autoincrement())
  event_type            EventType
  event_name            String       @db.VarChar(200)
  event_mandarin_name   String?      @db.VarChar(200)
  location              Location     @relation(fields: [locationId], references: [location_id])
  locationId            Int
  lunar_sui_ci_year     String       @db.VarChar(3)
  lunar_month           String       @db.VarChar(4)
  lunar_day             String       @db.VarChar(4)
  is_recurring          Boolean
  description           String?      @db.VarChar(1000)
  poster_s3_bucket_link String?      @db.VarChar(250)
  created_at            DateTime?    @default(now())
  updated_at            DateTime?    @updatedAt
  occurrences           Occurrence[]
}

model Occurrence {
  occurrence_id   Int       @id @default(autoincrement())
  event_id        Int
  event           Event     @relation(fields: [event_id], references: [event_id])
  greg_occur_date DateTime
  created_at      DateTime? @default(now())
  updated_at      DateTime? @updatedAt
}

enum Gender {
  Male
  Female
}

enum BloodType {
  A
  B
  O
  AB
}

enum MaritalStatus {
  Married
  Not_Married
}

enum Korwil {
  Korwil_1
  Korwil_2
  Korwil_3
  Korwil_4
  Korwil_5
  Korwil_6
}

enum EventType {
  Anniversary
  Hari_Besar
  Peresmian
  Regular
  AdHoc
  Seasonal
}
